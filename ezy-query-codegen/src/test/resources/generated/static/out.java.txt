package package;

import io.github.kayr.ezyquery.parser.QueryAndParams;
import io.github.kayr.ezyquery.parser.SqlParts;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.processing.Generated;

/**
 * Generated by EzyQuery
 */
@Generated(
    value = "io.github.kayr.ezyquery.gen.StaticQueryGen",
    date = "1970-01-01T00:00:00"
)
public class Query {
  public static SelectUsers selectUsers() {
    return new SelectUsers();
  }

  public static SelectOrders selectOrders() {
    return new SelectOrders();
  }

  public static SelectProducts selectProducts() {
    return new SelectProducts();
  }

  /**
   * -- Select Users
   * select * from users
   *             where name = :name
   *             and address = :address
   */
  public static class SelectUsers {
    private final SqlParts sql;

    public SelectUsers() {
      this.sql = SqlParts.of(
          SqlParts.textPart("select * from users\n"
              + "            where name = "),
          SqlParts.paramPart("name"),
          SqlParts.textPart("\n"
              + "            and address = "),
          SqlParts.paramPart("address")
      );
    }

    private SelectUsers(SqlParts sql) {
      this.sql = sql;
    }

    public SelectUsers name(Object name) {
      return new SelectUsers(sql.setParam("name", name));
    }

    public SelectUsers address(Object address) {
      return new SelectUsers(sql.setParam("address", address));
    }

    public QueryAndParams getQuery() {
      return sql.getQuery();
    }

    public SelectUsers setParam(String param, Object value) {
      return new SelectUsers(sql.setParam(param, value));
    }

    public SelectUsers setParams(Map<String, Object> params) {
      SqlParts sql = this.sql;
      for (Map.Entry<String, Object> entry : params.entrySet()) {
        sql = sql.setParam(entry.getKey(), entry.getValue());
      }
      return new SelectUsers(sql);
    }
  }

  /**
   * -- Select Orders
   * select * from orders
   *             where user_id = userId
   */
  public static class SelectOrders {
    private final SqlParts sql;

    public SelectOrders() {
      this.sql = SqlParts.of(
          SqlParts.textPart("select * from orders\n"
              + "            where user_id = userId")
      );
    }

    private SelectOrders(SqlParts sql) {
      this.sql = sql;
    }

    public QueryAndParams getQuery() {
      return sql.getQuery();
    }

    public SelectOrders setParam(String param, Object value) {
      return new SelectOrders(sql.setParam(param, value));
    }

    public SelectOrders setParams(Map<String, Object> params) {
      SqlParts sql = this.sql;
      for (Map.Entry<String, Object> entry : params.entrySet()) {
        sql = sql.setParam(entry.getKey(), entry.getValue());
      }
      return new SelectOrders(sql);
    }
  }

  /**
   * -- Select Products
   * select * from products
   *             where product_id = :product_id
   */
  public static class SelectProducts {
    private final SqlParts sql;

    public SelectProducts() {
      this.sql = SqlParts.of(
          SqlParts.textPart("select * from products\n"
              + "            where product_id = "),
          SqlParts.paramPart("product_id")
      );
    }

    private SelectProducts(SqlParts sql) {
      this.sql = sql;
    }

    public SelectProducts productId(Object productId) {
      return new SelectProducts(sql.setParam("product_id", productId));
    }

    public QueryAndParams getQuery() {
      return sql.getQuery();
    }

    public SelectProducts setParam(String param, Object value) {
      return new SelectProducts(sql.setParam(param, value));
    }

    public SelectProducts setParams(Map<String, Object> params) {
      SqlParts sql = this.sql;
      for (Map.Entry<String, Object> entry : params.entrySet()) {
        sql = sql.setParam(entry.getKey(), entry.getValue());
      }
      return new SelectProducts(sql);
    }
  }
}
